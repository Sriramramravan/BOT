//@version=4
study(title="Custom Alerts and Regression Candles", overlay=true)

// Inputs for Custom Alerts
a = input(1, title="Parameter A")
c = input(10, title="Parameter C")
h = input(false, title="Use Heikin Ashi Candles")

xATR = atr(c)
nLoss = a * xATR

src = h ? security(heikinashi(syminfo.tickerid), timeframe.period, close, lookahead=false) : close

xATRTrailingStop = 0.0
xATRTrailingStop := iff(src > nz(xATRTrailingStop[1], 0) and src[1] > nz(xATRTrailingStop[1], 0), max(nz(xATRTrailingStop[1]), src - nLoss),
   iff(src < nz(xATRTrailingStop[1], 0) and src[1] < nz(xATRTrailingStop[1], 0), min(nz(xATRTrailingStop[1]), src + nLoss), 
   iff(src > nz(xATRTrailingStop[1], 0), src - nLoss, src + nLoss)))
 
pos = 0   
pos := iff(src[1] < nz(xATRTrailingStop[1], 0) and src > nz(xATRTrailingStop[1], 0), 1,
   iff(src[1] > nz(xATRTrailingStop[1], 0) and src < nz(xATRTrailingStop[1], 0), -1, nz(pos[1], 0))) 
   
xcolor = pos == -1 ? color.red : pos == 1 ? color.green : color.blue 

ema = ema(src, 1)
above = crossover(ema, xATRTrailingStop)
below = crossover(xATRTrailingStop, ema)

buy = src > xATRTrailingStop and above 
sell = src < xATRTrailingStop and below

barbuy = src > xATRTrailingStop 
barsell = src < xATRTrailingStop 

plotshape(buy, title="Buy", text='Buy', style=shape.labelup, location=location.belowbar, color=color.green, textcolor=color.white, transp=0, size=size.tiny)
plotshape(sell, title="Sell", text='Sell', style=shape.labeldown, location=location.abovebar, color=color.red, textcolor=color.white, transp=0, size=size.tiny)

barcolor(barbuy ? color.green : na)
barcolor(barsell ? color.red : na)

alertcondition(buy, "Long", "Long")
alertcondition(sell, "Short", "Short")

// Inputs for Custom Regression Candles
signal_length = input(title="Signal Smoothing", type=input.integer, minval=1, maxval=200, defval=11)
sma_signal = input(title="Simple MA (Signal Line)", type=input.bool, defval=true)

use_lin_reg = input(title="Use Linear Regression", type=input.bool, defval=true)
linreg_length = input(title="Linear Regression Length", type=input.integer, minval=1, maxval=200, defval=11)

base_open = use_lin_reg ? linreg(open, linreg_length, 0) : open
base_high = use_lin_reg ? linreg(high, linreg_length, 0) : high
base_low = use_lin_reg ? linreg(low, linreg_length, 0) : low
base_close = use_lin_reg ? linreg(close, linreg_length, 0) : close

is_bullish = base_open < base_close

signal_line = sma_signal ? sma(base_close, signal_length) : ema(base_close, signal_length)

plotcandle(is_bullish ? base_open : na, is_bullish ? base_high : na, is_bullish ? base_low: na, is_bullish ? base_close : na, title="Custom Regression Candles", color=color.green, wickcolor=color.green, bordercolor=color.green, editable=true)
plotcandle(is_bullish ? na : base_open, is_bullish ? na : base_high, is_bullish ? na : base_low, is_bullish ? na : base_close, title="Custom Regression Candles", color=color.red, wickcolor=color.red, bordercolor=color.red, editable=true)

plot(signal_line, color=color.white)
